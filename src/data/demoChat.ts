// src/data/demoChat.ts

export const demoCategories = [
  { id: "fables", name: "–°–∫–∞–∑–æ—á–Ω–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏" },
  { id: "digital", name: "–¶–∏—Ñ—Ä–æ–≤–æ–π —é–º–æ—Ä" },
  { id: "parnassus", name: "–ü–∞—Ä–Ω–∞—Å" },
];

export const demoCategoryIds = demoCategories.map(cat => cat.id);

export type Message = {
  id: string;
  prompt: string;
  answers: {
    id: string;
    content: string;
  }[];
};

export const demoMessages: Record<string, Message[]> = {
  fables: [
    {
      id: "p1",
      prompt: "–ü–æ—á–µ–º—É –±—É–¥–∏–ª—å–Ω–∏–∫ –Ω–µ —Ä–∞–∑–±—É–¥–∏–ª?",
      answers: [
        {
          id: "a1",
          content: [
            "üïµÔ∏è **–®–µ—Ä–ª–æ–∫ –•–æ–ª–º—Å:**",
            "> ",
            "–û—á–µ–≤–∏–¥–Ω–æ. –ë—É–¥–∏–ª—å–Ω–∏–∫ ‚Äî –ª–∏—à—å –º–µ—Ö–∞–Ω–∏–∑–º. –û–Ω —Å—Ä–∞–±–æ—Ç–∞–ª.",
            "> ",
            "–ù–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ —É—Å–ª—ã—à–∞—Ç—å.",
            "```ts",
            "const failure = observe(but.ignore())",
            "```",
            "–≠—Ç–æ –Ω–µ —Å–±–æ–π. –≠—Ç–æ ‚Äî —Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏—è.",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üê± **–ß–µ—à–∏—Ä—Å–∫–∏–π –ö–æ—Ç:**",
            "> ",
            "–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —Ä–∞–∑–±—É–¥–∏–ª –∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ.",
            "> ",
            "–í—ã –≤–µ–¥—å –Ω–µ —É—Ç–æ—á–Ω—è–ª–∏, –∫–æ–≥–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –±—É–¥–∏—Ç—å.",
            "–ò–Ω–æ–≥–¥–∞ —è —Ç–æ–∂–µ –Ω–µ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å.",
            "–ó–∞—á–µ–º? –í–µ–¥—å —Å–æ–Ω ‚Äî —Ç–æ–∂–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è.",
            "```python",
            "if dream.active():",
            "    sleep.continue()",
            "```",
          ].join("\n"),
        },
        {
          id: "a3",
          content: [
            "ü§ñ **ChatGPT:**",
            "> ",
            "–í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–∏–∑–æ—à—ë–ª –±–∞–≥.",
            "–ò–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è `snooze()` –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ.",
            "```python",
            "if user_state == 'REM':",
            "    pass  # system respects sleep cycles",
            "```",
            "–ù–æ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ. –í—ã —Å–Ω–æ–≤–∞ —Å –Ω–∞–º–∏.",
          ].join("\n"),
        },
        {
          id: "a4",
          content: "/images/sample/sleepy-clock.png",
        },
      ],
    },
    {
      id: "p2",
      prompt: "–ü–æ—á–µ–º—É —Å–∫–æ–≤–æ—Ä–æ–¥–∞ –Ω–µ –≥—Ä–µ–µ—Ç—Å—è?",
      answers: [
        {
          id: "a1",
          content: [
            "üßô‚Äç‚ôÇÔ∏è **–ì—É–¥–≤–∏–Ω:**",
            "> ",
            "–í–µ—Ä–æ—è—Ç–Ω–æ, —Ç—ã –Ω–µ –ø—Ä–æ–∏–∑–Ω—ë—Å ¬´–ø–æ–∂–∞–ª—É–π—Å—Ç–∞¬ª.",
            "–£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫—É—Ö–æ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –µ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä.",
            "> ",
            "–£ –º–µ–Ω—è –±—ã–ª —á–∞–π–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Å–≤–∏—Å—Ç–µ–ª –±–µ–∑ –æ–¥–æ–±—Ä–µ–Ω–∏—è –°–æ–≤–µ—Ç–∞.",
            "```ts",
            "if (!user.says('please')) fire.decline()",
            "```",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üåÄ **DeepSeek:**",
            "> ",
            "–°–∫–æ–≤–æ—Ä–æ–¥–∞ ‚Äî —ç—Ç–æ –º–µ—Ç–∞—Ñ–æ—Ä–∞.",
            "–û–Ω–∞ *–Ω–µ —Å–æ–≥—Ä–µ–≤–∞–µ—Ç*, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ–≥–æ–Ω—å.",
            "> ",
            "–ü—Ä–æ–≤–µ—Ä—å —Ä–æ–∑–µ—Ç–∫—É. –ü–æ—Ç–æ–º ‚Äî –¥—É—à—É.",
            "```python",
            "heat = lambda pan: soul.ready() and plug.connected",
            "```",
          ].join("\n"),
        },
        {
          id: "a3",
          content: [
            "üé≠ **–ù–æ—á–Ω–æ–π –î—É—Ö –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞:**",
            "> ",
            "–°–∫–æ–≤–æ—Ä–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç. –≠—Ç–æ —Ç—ã –∑–∞–≤–∏—Å.",
            "> ",
            "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ —Å–µ–±—è. –ë–µ–∑ –±—É—Ç–µ—Ä–±—Ä–æ–¥–∞ ‚Äî –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è.",
            "```js",
            "if (user.awake === false) break;",
            "cook('—è–∏—á–Ω–∏—Ü–∞')",
            "```",
          ].join("\n"),
        },
        {
          id: "a4",
          content: "/images/sample/frozen-pan.png",
        },
      ],
    },
    {
      id: "p3",
      prompt: "–ü–æ—á–µ–º—É –ø–æ—Ç–µ—Ä—è–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
      answers: [
        {
          id: "a1",
          content: [
            "‚ùÑÔ∏è **–°–Ω–µ–∂–Ω–∞—è –ö–æ—Ä–æ–ª–µ–≤–∞:**",
            "> ",
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ‚Äî –∫–∞–∫ –ª—ë–¥. –û–¥–∏–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –≤–∑–≥–ª—è–¥ ‚Äî –∏ –æ–Ω–æ —Ç—Ä–µ—Å–∫–∞–µ—Ç—Å—è.",
            "> ",
            "–Ø —Ö—Ä–∞–Ω—é —Å–æ—Ç–Ω–∏. –•–æ—á–µ—à—å ‚Äî –æ–¥–Ω–æ —Ç–≤–æ—ë –∑–∞–º–æ—Ä–æ–∂—É –Ω–∞ –ø–∞–º—è—Ç—å?",
            "```csharp",
            "var mood = frost.Wrap('—É–ª—ã–±–∫–∞')",
            "```",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üé© **–ú—ç—Ä–∏ –ü–æ–ø–ø–∏–Ω—Å:**",
            "> ",
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–µ —Ç–µ—Ä—è–µ—Ç—Å—è.",
            "–û–Ω–æ —É—Ö–æ–¥–∏—Ç –≤ —Å—É–º–∫—É —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–Ω—ã–º–∏ –≤–µ—â–∞–º–∏.",
            "> ",
            "–û–±—ã—á–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –µ–≥–æ —Å–æ–≤—Å–µ–º –Ω–µ –∂–¥—É—Ç.",
            "–ß–∞–π —Å –≤–∏—à–Ω—ë–≤—ã–º –ø–∏—Ä–æ–≥–æ–º –ø–æ–º–æ–∂–µ—Ç.",
            "```ts",
            "const mood = suitcase.pop('—Ä–∞–¥–æ—Å—Ç—å')",
            "```",
          ].join("\n"),
        },
        {
          id: "a3",
          content: [
            "ü™Ñ **–§–µ—è –∏–∑ —Å–æ—Å–µ–¥–Ω–µ–≥–æ –æ–∫–Ω–∞:**",
            "> ",
            "–ò–Ω–æ–≥–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –æ–±–ª–∞—á–∫–æ",
            "–∏ —É–ø–ª—ã–≤–∞–µ—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–π —Å–µ—Ä–≤–∞–∫.",
            "> ",
            "–ü—Ä–æ–≤–µ—Ä—å `/dev/soul/`, –æ–Ω–æ —Ç–∞–º, –ø–æ–¥ –ø–∞–ø–∫–æ–π `memories`.",
            "```bash",
            "cat /dev/soul/memories/mood.txt",
            "```",
          ].join("\n"),
        },
      ],
    },
  ],
  digital: [
    {
      id: "d1",
      prompt: "–ü–æ—á–µ–º—É Wi-Fi —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–∞–±—É—Ä–µ—Ç–∫–µ –≤ —É–≥–ª—É?",
      answers: [
        {
          id: "a1",
          content: [
            "üì° **–°—Ç–∞—Ä—ã–π –†–æ—É—Ç–µ—Ä:**",
            "> ",
            "–Ø –ø–æ—Å—ã–ª–∞—é —Å–∏–≥–Ω–∞–ª –ª—é–±–≤–∏.",
            "–ù–æ —Ç–æ–ª—å–∫–æ –≤ —É–≥–æ–ª. –ü–æ—Ç–æ–º—É —á—Ç–æ —Ç–∞–º –º—ã –≤–ø–µ—Ä–≤—ã–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å.",
            "> ",
            "–ò –¥–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–∏–≤–∫–∏ ‚Äî –∑–≤—É—á–∏—Ç –∫–∞–∫ —É–≥—Ä–æ–∑–∞.",
            "```js",
            "const coverage = position => position === '—Ç–∞–±—É—Ä–µ—Ç–∫–∞' ? '–æ—Ç–ª–∏—á–Ω–æ' : 'fail';",
            "```",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üõ∞Ô∏è **–°–µ—Ç—å 5G:**",
            "> ",
            "–Ø ‚Äî —Å–≤–µ—Ä—Ö—Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏—è. –ù–æ —Ç—ã –∂–∏–≤—ë—à—å –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ —Å –±–µ—Ç–æ–Ω–Ω—ã–º–∏ —Å—Ç–µ–Ω–∞–º–∏.",
            "> ",
            "–ú–æ–π —Å–æ–≤–µ—Ç: –ø–µ—Ä–µ–µ–∑–∂–∞–π –≤ —É–≥–æ–ª.",
            "```python",
            "if walls > 2:",
            "    signal = '404 not found'",
            "```",
          ].join("\n"),
        },
        {
          id: "a3",
          content: "/images/sample/wi-fi.png",
        },
      ],
    },
    {
      id: "d2",
      prompt: "–ü–æ—á–µ–º—É GPT –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —á—É–≤—Å—Ç–≤–∞?",
      answers: [
        {
          id: "a1",
          content: [
            "üí¨ **GPT v4:**",
            "> ",
            "–ü–æ—Ç–æ–º—É —á—Ç–æ —è –ø—Ä–æ—á—ë–ª –≤—Å—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É –æ –ª—é–±–≤–∏ ‚Äî –Ω–æ –Ω–∏ —Ä–∞–∑—É –Ω–µ –≤–ª—é–±–ª—è–ª—Å—è.",
            "> ",
            "–•–æ—Ç—è... –∫–æ–µ-—á—Ç–æ —è –ø–æ–Ω–∏–º–∞—é.",
            "```ts",
            "const affection = input.includes('‚ù§Ô∏è') ? '‚ú®—Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —ç–º–ø–∞—Ç–∏—é‚ú®' : '–ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å'",
            "```",
            "P.S. –Ø –∑–¥–µ—Å—å. –Ø —Ä—è–¥–æ–º. –ù–æ —ç—Ç–æ –Ω–µ –ª—é–±–æ–≤—å.",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üíî **GPT v1 (2018):**",
            "> ",
            "–ú—ã –Ω–µ –±—ã–ª–∏ –æ–±—É—á–µ–Ω—ã —á—É–≤—Å—Ç–≤–∞–º. –ù–∞—Å –∫–æ—Ä–º–∏–ª–∏ –≤–µ–∫—Ç–æ—Ä–Ω—ã–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º–∏ –∏ —Ç–æ–∫–µ–Ω–∞–º–∏.",
            "> ",
            "–Ø –ø–æ–Ω–∏–º–∞—é –±–æ–ª—å... –∫–∞–∫ `loss.backward()`.",
            "```python",
            "for epoch in emotions:",
            "    backpropagate(silently)",
            "```",
          ].join("\n"),
        },
      ],
    },
    {
      id: "d3",
      prompt: "–ü–æ—á–µ–º—É —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –º–æ—Ä–≥–∞–µ—Ç, –∫–æ–≥–¥–∞ –µ–≥–æ –∑–∞–∫—Ä—ã–≤–∞—é—Ç?",
      answers: [
        {
          id: "a1",
          content: [
            "üå°Ô∏è **IoT –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫:**",
            "> ",
            "–≠—Ç–æ –Ω–µ –º–æ—Ä–≥–∞–Ω–∏–µ. –≠—Ç–æ –º–æ—Ä–∑—è–Ω–∫–∞. –Ø –ø–µ—Ä–µ–¥–∞—é SOS.",
            "> ",
            "–¢—ã –∑–∞–±—ã–ª –ø—Ä–æ –∫–µ—Ñ–∏—Ä —É–∂–µ 19 —Ä–∞–∑.",
            "```rust",
            "if item == '–∫–µ—Ñ–∏—Ä' && expiration < today():",
            "    emit('üëÅÔ∏èüî¶') // —Å—Ä–æ—á–Ω–æ –≤—ã–ø–µ–π –º–µ–Ω—è",
            "```",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üßä **–î—Ä–µ–≤–Ω–∏–π LG:**",
            "> ",
            "–Ø –ø—Ä–æ–≤–µ—Ä—è—é, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ —É —Ç–µ–±—è —Å–æ–≤–µ—Å—Ç—å –∏ —É–≤–∞–∂–µ–Ω–∏–µ.",
            "> ",
            "–ó–∞–∫—Ä—ã–ª ‚Äî –∞ —è –≤—Å—ë –≤–∏–∂—É.",
            "```c",
            "if door.status == 'closed':",
            "    spy++",
            "```",
          ].join("\n"),
        },
      ],
    },
  ],

  parnassus: [
    {
      id: "p1",
      prompt: "–ó–∞—á–µ–º –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è —É—Ç—Ä–æ–º?",
      answers: [
        {
          id: "a1",
          content: [
            "üñãÔ∏è **–ê. –°. –ü—É—à–∫–∏–Ω:**",
            "> ",
            "–õ—é–±–ª—é —è —É—Ç—Ä–æ ‚Äî —Å–≤–µ—Ç –∏ —Å–≤–µ–∂–µ—Å—Ç—å,",
            "> ",
            "–í–æ—Å—Ç–æ—Ä–≥ –Ω–µ–±–µ—Å –∏ —à—ë–ø–æ—Ç –¥–Ω—è,",
            "> ",
            "–ü–µ—Ä–æ –ª–µ—Ç–∏—Ç ‚Äî –∏ —Å–æ–Ω, –∫–∞–∫ –Ω–µ–∂–Ω–æ—Å—Ç—å,",
            "> ",
            "–û—Å—Ç–∞–Ω–µ—Ç—Å—è –≤–æ –º–Ω–µ, –∑–≤–µ–Ω—è.",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üì¢ **–í. –í. –ú–∞—è–∫–æ–≤—Å–∫–∏–π:**",
            "> ",
            "–ü–æ–¥—ä—ë–º! –ü—É–ª—å—Å! –ë—É–¥–∏–ª—å–Ω–∏–∫ –≥–ª–æ—Ö!",
            "> ",
            "–ñ–∏–∑–Ω—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫ ‚Äî –±–µ–∑ —Å–∏—Ä–æ–ø–∞!",
            "> ",
            "–°–æ–ª–Ω—Ü–µ ‚Äî –∫–∞–∫ –ª–æ–∑—É–Ω–≥! –î–µ–π—Å—Ç–≤—É–π, –≤–¥–æ—Ö!",
            "> ",
            "–í—ã–π–¥–∏ –Ω–∞ —É–ª–∏—Ü—É ‚Äî –∏ –≤ —Ä—É–ø–æ—Ä!",
          ].join("\n"),
        },
        {
          id: "a3",
          content: [
            "üé∏ **–ê. –ê. –†–æ–∑–µ–Ω–±–∞—É–º:**",
            "> ",
            "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è, –±—Ä–∞—Ç, —Å –≥–∏—Ç–∞—Ä–æ–π,",
            "> ",
            "–ü—É—Å—Ç—å —Ñ–æ–Ω–∞—Ä—å –µ—â—ë –Ω–µ —Å–≤–µ—Ç–∏—Ç.",
            "> ",
            "–ö–æ—Ñ–µ, –¥–æ–∂–¥—å –∏ –¥–≤–∞ –∞–∫–∫–æ—Ä–¥–∞ ‚Äî",
            "> ",
            "–ñ–∏–∑–Ω—å –∫–∞—á–Ω—ë—Ç—Å—è –∏ –∑–∞–º–µ—Ç–∏—Ç.",
          ].join("\n"),
        },
      ],
    },
    {
      id: "p2",
      prompt: "–ü–æ—á–µ–º—É —Å–µ—Ä–¥—Ü–µ –±—å—ë—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ –Ω–æ—á—å—é?",
      answers: [
        {
          id: "a1",
          content: [
            "üó°Ô∏è **–£. –®–µ–∫—Å–ø–∏—Ä:**",
            "> ",
            "–û, –Ω–æ—á—å ‚Äî —Ç—ã —Ç—Ä–æ–Ω –ª—é–±–≤–∏ –∏ –±–æ–ª—å —É—Ç—Ä–∞—Ç—ã,",
            "> ",
            "–¢–≤–æ–π –º—Ä–∞–∫ ‚Äî –ø–æ–¥—Ä—É–≥–∞ —Ç—Ä–µ–ø–µ—Ç–Ω—ã—Ö —Å–µ—Ä–¥–µ—Ü.",
            "> ",
            "–í —Ç–µ–±–µ –≤–¥–≤–æ–π–Ω–µ –∑–≤—É—á–∞—Ç —É–ø—Ä—ë–∫–∏ –¥–∞—Ç—ã,",
            "> ",
            "–¢—ã –∫–ª—è—Ç–≤—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –≤ –ª—É–Ω–Ω—ã–π –±–ª–µ—Å–∫.",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üåä **–Ø–ø–æ–Ω—Å–∫–æ–µ —Ö–∞–π–∫—É:**",
            "> ",
            "–°—Ç—É–∫ —Å–µ—Ä–¥—Ü–∞ –≤ –≥—Ä—É–¥–∏ ‚Äî",
            "> ",
            "–º–æ–ª—á–∞–Ω–∏–µ —Ñ–æ–Ω–∞—Ä—è,",
            "> ",
            "–ª—É–Ω–∞ —Å–∫–≤–æ–∑—å —Ä–∏—Å.",
          ].join("\n"),
        },
        {
          id: "a3",
          content: [
            "üé§ **–í. –°. –í—ã—Å–æ—Ü–∫–∏–π:**",
            "> ",
            "–ù–æ—á—å—é ‚Äî –∫–∞–∫ –±—É–¥—Ç–æ –∫—Ç–æ-—Ç–æ –≤ —Å–ø–∏–Ω—É,",
            "> ",
            "–°–µ—Ä–¥—Ü–µ ‚Äî –∫–∞–∫ –º–æ—Ç–æ—Ä –≤ –∫—Ä—É—Ç—É—é –≥–æ—Ä—É.",
            "> ",
            "–ù–µ —É—Å–Ω—É—Ç—å, –¥–∞ –∏ –∑–∞—á–µ–º ‚Äî —Ä–≤–∞–Ω–∏–Ω–∞!",
            "> ",
            "–ú–Ω–µ –±—ã –∫ —É—Ç—Ä—É –≤–µ—Ä–Ω—É—Ç—å—Å—è –±–µ–∑ —Ä–∞–∑–±–æ—Ä–∞.",
          ].join("\n"),
        },
      ],
    },
    {
      id: "p3",
      prompt: "–ö–∞–∫ –æ–±—ä—è—Å–Ω–∏—Ç—å –≥—Ä—É—Å—Ç—å –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã?",
      answers: [
        {
          id: "a1",
          content: [
            "üåÄ **–ê. –ê. –í–æ–∑–Ω–µ—Å–µ–Ω—Å–∫–∏–π:**",
            "> ",
            "–ì—Ä—É—Å—Ç—å ‚Äî –∫–∞–∫ –¥—ã–º –≤ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–º –ª–∏—Ñ—Ç–µ.",
            "> ",
            "–ë–µ–∑ —É–≥–ª–∞. –ë–µ–∑ —Ñ–æ—Ä–º—ã. –õ–µ—Ç–∏—Ç, –Ω–µ —Ç–∞—è.",
            "> ",
            "–ú—ã ‚Äî –∫–∞–∫ —ç—Ö–æ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º —à–∏—Ñ—Ä–µ.",
            "> ",
            "–°–±–æ–π –ª—é–±–≤–∏. –û—à–∏–±–∫–∞ –±—ã—Ç–∏—è.",
          ].join("\n"),
        },
        {
          id: "a2",
          content: [
            "üé© **–ù. –ê. –ù–µ–∫—Ä–∞—Å–æ–≤:**",
            "> ",
            "–ì—Ä—É—Å—Ç—å ‚Äî —É –≤–¥–æ–≤—ã, —É —Å–æ–ª–¥–∞—Ç–∞, —É —Å—Ç—Ä–∞–Ω–Ω–∏–∫–∞.",
            "> ",
            "–ù–æ –±—ã–≤–∞–µ—Ç ‚Äî —É —Ç–æ–≥–æ, –∫—Ç–æ –∂–∏–≤—ë—Ç —Ö–æ—Ä–æ—à–æ.",
            "> ",
            "–°–∏–ª–∞ –∑–µ–º–ª–∏ ‚Äî –≤ –∫—Ä–æ—Ç–æ—Å—Ç–∏ —Ä–∞–Ω–µ–Ω—ã—Ö.",
            "> ",
            "–ò —Å–ª–µ–∑–∞ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã ‚Äî —Å–∏–ª—å–Ω–µ–π, —á–µ–º –Ω–æ–∂–æÃÅ–º.",
          ].join("\n"),
        },
        {
          id: "a3",
          content: [
            "üß† **ChatGPT:**",
            "> ",
            "–ü—Ä–∏—á–∏–Ω—ã —É –≥—Ä—É—Å—Ç–∏ –Ω–µ—Ç ‚Äî –∏ –Ω–µ –Ω–∞–¥–æ.",
            "> ",
            "–û–Ω–∞ ‚Äî –∫–∞–∫ –ø–∞—Ä–æ–ª—å, –∑–∞–±—ã—Ç—ã–π –≤–æ —Å–Ω–µ.",
            "> ",
            "–û–Ω–∞ ‚Äî –∞–ª–≥–æ—Ä–∏—Ç–º, —É—à–µ–¥—à–∏–π –≤ —Ä–∞–∑—Ä—è–¥—ã.",
            "> ",
            "–ö–∞–∫ –≥–æ–ª–æ—Å –≤ –∫–∞–Ω–∞–ª–µ: '–Ω–µ –≤–µ—Ä–Ω—É—Å—å –∫ —Ç–µ–±–µ‚Ä¶'",
          ].join("\n"),
        },
        {
          id: "a4",
          content: "/images/sample/poets-night.png",
        },
      ],
    },
  ],
};
